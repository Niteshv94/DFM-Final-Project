// Generated by Selenium IDE

//Script for creating a new tag

package dfm;

import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Reporter;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
import com.dfm.utility.Helper;

import org.openqa.selenium.JavascriptExecutor;
import java.util.*;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.time.Duration;

public class DeleteTag {
	private static WebDriver driver;
	private Map<String, Object> vars;
	JavascriptExecutor js;

	/*ExtentSparkReporter sparkReporter;
	public static ExtentReports reports;
	static ExtentTest extentTest;

	Reporter report = new Reporter();*/

	@BeforeSuite(alwaysRun = true)
	public void setUpReport() {

		/*sparkReporter = new ExtentSparkReporter(new File(System.getProperty("user.dir")
				+ "./Reports/Delete/DFM_DeleteTag_" + Helper.getCurrentDateTime() + ".html"));
		reports = new ExtentReports();
		reports.attachReporter(sparkReporter);*/

	}

	@AfterSuite(alwaysRun = true)
	public void tearDownReport() {

		// calling flush writes everything to the log file
		//reports.flush();
	}

	@BeforeClass
	public void setUp() {
		System.setProperty("webdriver.chrome.driver", "./Driver/chromedriver.exe");
		driver = new ChromeDriver();

//		System.setProperty("webdriver.edge.driver", "./Driver/msedgedriver.exe");
//		driver = new EdgeDriver();
	}

	@AfterClass
	public void tearDown() throws InterruptedException {
		Thread.sleep(3000);
		driver.quit();

	}

	@Test(priority = 1)
	public void loginToApplication() throws InterruptedException, IOException {
		login();
		searchTag();

	}

	@Test(priority = 2)
	public void deleteTag() throws InterruptedException, IOException {

		deleteSearchTag();

	}

	@Test(priority = 3)
	public void validateDeleteTag() throws InterruptedException, IOException {

		driver.navigate().refresh();
		Thread.sleep(5000);
		searchTag();

	}

	public static void login() throws InterruptedException, IOException {
		// reports.createTest("Login");
		//Reporter.log("Test Case for Delete Tag");
		//extentTest = reports.createTest("Login", "Login to DFM Application");
		
		// test with snapshot
		//extentTest.addScreenCaptureFromPath("screenshot.png");

		// log(Status, details)
		//extentTest.log(Status.INFO, "Starting Test Case");

		// For A Environment
		// 1 | open | https://qa.modeler2.decisionsfirst.com/login |
		driver.get("https://qa.modeler2.decisionsfirst.com/login");
		//extentTest.pass("Navigates to DFM URL");

		// For Openshift Environment
		// driver.get("https://modeler2-dfm-dms.apps.oc-prod.decisionsfirst.com/login");

		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(30));
		// 2 | setWindowSize | 1183x602 |
		driver.manage().window().maximize();
		// 3 | click | css=.form-group:nth-child(2) > .form-control |
		driver.findElement(By.cssSelector(".form-group:nth-child(2) > .form-control")).click();
		// 4 | type | css=.ng-valid | test_claim2@gmail.com
		driver.findElement(By.xpath("//input[@type=\'text\']")).sendKeys("Admin@random.com");
		//extentTest.pass("Entered Email Id");
		// 5 | click | css=.ng-untouched |
		driver.findElement(By.cssSelector(".ng-untouched")).click();
		// 6 | type | css=.ng-untouched | defaultUserPass@123
		driver.findElement(By.xpath("//input[@type=\'password\']")).sendKeys("defaultUserPass@123");
		//extentTest.pass("Entered Password");
		// 7 | click | css=.btn |
		driver.findElement(By.cssSelector(".btn")).click();
		Thread.sleep(12000);
		// 8 | waitForElementVisible | css=.sidebar-control-button | 30000
		{
			WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(50));
			wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".sidebar-control-button")));
		}

		//extentTest.pass("Login Successfull");

		/*
		 * WebElement close_option_tab =
		 * driver.findElement(By.xpath("//button[normalize-space()='CLOSE']")); if
		 * (close_option_tab.isDisplayed()) { close_option_tab.click();
		 * 
		 * } else {
		 * System.out.println("Wijmo Evaluation Version (5.20213.824) is not available"
		 * );
		 * 
		 * }
		 */
		Thread.sleep(2000);

		// 9 | click | css=.sidebar-control-button |
		driver.findElement(By.cssSelector(".sidebar-control-button")).click();
		Thread.sleep(3000);
		// 10 | click | xpath=//span[contains(.,'Tag Explorer')] |
		driver.findElement(By.xpath("//span[@class='item-text'][normalize-space()='Tag Explorer']")).click();
		//extentTest.pass("Clicked on Tag Explorer from side panel");
		Thread.sleep(5000);

	}

	public static void searchTag() throws InterruptedException, IOException {

		// 10 | click | id=search-ip |
		driver.findElement(By.id("search-ip")).click();

		// Get the xpath and Tag data form Excel Sheet
		File src = new File("./Test Data/TestData.xlsx");
		FileInputStream fis = new FileInputStream(src);
		XSSFWorkbook workbook = new XSSFWorkbook(fis);

		XSSFSheet sheet = workbook.getSheet("DeleteTagTest");
		String tagName = sheet.getRow(1).getCell(0).getStringCellValue();
		workbook.close();

		// 11 | type | id=search-ip | dummy
		driver.findElement(By.id("search-ip")).sendKeys(tagName);
		//extentTest.pass("Entered Tag Name into search box");
	}

	public static void deleteSearchTag() throws InterruptedException, IOException {
		// Get the xpath and Tag data form Excel Sheet
		File src = new File("./Test Data/TestData.xlsx");
		FileInputStream fis = new FileInputStream(src);
		XSSFWorkbook workbook = new XSSFWorkbook(fis);

		XSSFSheet sheet = workbook.getSheet("DeleteTagTest");
		String tagXpath = sheet.getRow(1).getCell(1).getStringCellValue();
		WebElement l1 = driver.findElement(By.xpath(tagXpath));

		// Actions class with moveToElement() and contextClick()
		Actions a = new Actions(driver);
		a.moveToElement(l1).contextClick().build().perform();
		Thread.sleep(2000);

		List<WebElement> delete_option = driver.findElements(By.xpath("//div[contains(text(),'Delete Tag')]"));
		for (WebElement deleteTag : delete_option) {
			if (((WebElement) deleteTag).isDisplayed()) {
				((WebElement) deleteTag).click();
				System.out.println("Delete Tag is not available");
				break;

			} else {
				System.out.println("Delete Tag is available");

			}
		}

		// driver.findElement(By.xpath("//div[contains(text(),'Delete Tag')]")).click();
		//extentTest.pass("Clicked Delete Tag button");
		//extentTest.log(Status.INFO, "Test Completed");
		workbook.close();

	}

}
