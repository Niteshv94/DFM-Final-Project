// Generated by Selenium IDE

//Script to Create Group

package dfm;

import org.junit.Before;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.junit.After;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Reporter;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
import com.dfm.utility.Helper;

import org.openqa.selenium.JavascriptExecutor;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.time.Duration;
import java.util.*;

public class DeleteGroupsModelerUI {
	private static WebDriver driver;
	// private Map<String, Object> vars;
	JavascriptExecutor js;

	ExtentSparkReporter sparkReporter;
	public static ExtentReports reports;
	static ExtentTest extentTest;

	@BeforeSuite(alwaysRun = true)
	public void setUpReport() {

		sparkReporter = new ExtentSparkReporter(new File(System.getProperty("user.dir")
				+ "./Reports/Groups/DFM_DeleteGroup_" + Helper.getCurrentDateTime() + ".html"));
		reports = new ExtentReports();
		reports.attachReporter(sparkReporter);

	}

	@BeforeClass
	public static void setUp() {
		System.setProperty("webdriver.chrome.driver", "./Driver/chromedriver.exe");
		driver = new ChromeDriver();

		// System.setProperty("webdriver.edge.driver", "./Driver/msedgedriver.exe");
		// driver=new EdgeDriver();
	}

	@AfterClass
	public void tearDown() {
		driver.quit();
	}

	@Test(priority = 1)
	public static void addGroupsModelerUI01() throws InterruptedException, IOException {

		// reports.createTest("Login");
		Reporter.log("Test Case for Delete Group");
		extentTest = reports.createTest("Login", "Login to DFM Application");
		// log with snapshot
//		extentTest.pass("Details",
//				MediaEntityBuilder.createScreenCaptureFromPath("./Screenshots/screenshot.png").build());
		// test with snapshot
		extentTest.addScreenCaptureFromPath("screenshot.png");

		// log(Status, details)
		extentTest.log(Status.INFO, "Starting Test Case");

		// For QA Environment
		// 1 | open | https://qa.modeler2.decisionsfirst.com/login |
		driver.get("https://qa.modeler2.decisionsfirst.com/login");
		extentTest.pass("Navigates to DFM URL");

		// For Openshift Environment
		// driver.get("https://modeler2-dfm-dms.apps.oc-prod.decisionsfirst.com/login");

		// 2 | setWindowSize | 1936x1048 |
		driver.manage().window().maximize();
		// 3 | click | css=.form-group:nth-child(2) > .form-control |
		driver.findElement(By.cssSelector(".form-group:nth-child(2) > .form-control")).click();
		// 4 | type | xpath=//input[@type='text'] | nitesh@rxw.com
		driver.findElement(By.xpath("//input[@type=\'text\']")).sendKeys("nitesh@rxw.com");
		// 5 | click | css=.ng-untouched |
		driver.findElement(By.cssSelector(".ng-untouched")).click();
		// 6 | type | xpath=//input[@type='password'] | defaultUserPass@123
		driver.findElement(By.xpath("//input[@type=\'password\']")).sendKeys("defaultUserPass@123");
		// 7 | click | css=.btn |
		driver.findElement(By.cssSelector(".btn")).click();

		Thread.sleep(15000);

		{
			WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
			wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".sidebar-control-button")));
		}
		extentTest.pass("Login Successfull");
	}

	@Test(priority = 2)
	public static void deleteGroupsModeler() throws InterruptedException, IOException {

//		WebElement close_option_tab = driver.findElement(By.xpath("//button[normalize-space()='CLOSE']"));
//		if (close_option_tab.isDisplayed()) {
//			close_option_tab.click();
//
//		} else {
//			System.out.println("Wijmo Evaluation Version (5.20213.824) is not available");
//
//		}

		// 8 | click | css=.sidebar-control-button |
		driver.findElement(By.cssSelector(".sidebar-control-button")).click();
		// 9 | click | css=.item:nth-child(10) > .item-text |
		driver.findElement(By.cssSelector(".item:nth-child(10) > .item-text")).click();
		// 10 | click | css=.nav-link-group > .tab-text-container |
		Thread.sleep(4000);
		driver.findElement(By.cssSelector(".nav-link-group > .tab-text-container")).click();
		extentTest.pass("Clicked on Group Tab");
		Thread.sleep(2000);

		File src = new File("./Test Data/TestData.xlsx");
		FileInputStream fis = new FileInputStream(src);
		XSSFWorkbook workbook = new XSSFWorkbook(fis);

		XSSFSheet sheet = workbook.getSheet("DeleteGroupsModelerUI");

		// Get the data of Add Group form Excel Sheet
		String deleteGroup = sheet.getRow(1).getCell(3).getStringCellValue();

		Thread.sleep(4000);

		Actions actions = new Actions(driver);
		WebElement delete = driver.findElement(By.xpath(deleteGroup));
		actions.contextClick(delete).build().perform();

		driver.findElement(By.xpath("//div[normalize-space()='Delete Group']")).click();
		Thread.sleep(4000);
		extentTest.pass("Clicked on Delete Group button");

//		String message = driver.findElement(By.xpath("//div[@class='message']")).getText();
//		System.out.println("Success message after deletion of group : " + message);

		List<WebElement> verify_group_inList = driver.findElements(By.xpath(deleteGroup));
		if (verify_group_inList.size() > 0) {
			System.out.println("The Group is not deleted...Please try again later");

		} else {
			System.out.println("Congratulations, The Group is deleted from the Account...");

		}

		System.out.println("<<<<<Groups deleted Successfully>>>>>");
		extentTest.pass("Group Validated");
		extentTest.log(Status.INFO, "Test Completed");
		workbook.close();
	}

	@AfterSuite(alwaysRun = true)
	public void tearDownReport() {

		// calling flush writes everything to the log file
		reports.flush();
	}
}
